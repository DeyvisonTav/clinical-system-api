# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddressInput {
  city: String!
  complement: String
  neighborhood: String!
  number: String!
  state: String!
  street: String!
  zipCode: String!
}

type AddressOutput {
  city: String!
  complement: String
  neighborhood: String!
  number: String!
  state: String!
  street: String!
  zipCode: String!
}

type ConsultancyOutput {
  accountHolderName: String!
  city: String!
  cnpj: String!
  complement: String!
  cpf: String!
  id: String!
  name: String!
  neighborhood: String!
  number: String!
  officialEmail: String!
  patients: [PatientOutput!]
  primaryPhone: String!
  professionals: [ProfessionalOutput!]
  secondaryPhone: String!
  state: String!
  status: String!
  street: String!
  zipCode: String!
}

input CreateConsultancyInput {
  accountHolderName: String!
  city: String!
  cnpj: String!
  complement: String!
  cpf: String!
  name: String!
  neighborhood: String!
  number: String!
  officialEmail: String!
  primaryPhone: String!
  secondaryPhone: String!
  state: String!
  status: Boolean!
  street: String!
  zipCode: String!
}

input CreatePatientInput {
  address: AddressInput
  birth_date: DateTime
  clinic_id: String!
  cpf: String!
  dental_plan_name: String
  dental_plan_number: String
  email: String
  name: String!
  phone: String!
  responsible_name: String
  responsible_phone: String
}

input CreatePermissionInput {
  level: String!
  professionalsIds: [String!]!
}

input CreateProfessionalInput {
  clinicId: String!
  cpf: String!
  cro: String!
  email: String!
  fullName: String!
  password: String!
  permissionId: String!
  primaryPhone: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterPatientInput {
  cpf: String
  name: String
  phone: String
}

type Mutation {
  createConsultancy(data: CreateConsultancyInput!): ConsultancyOutput!
  createPatient(data: CreatePatientInput!): PatientOutput!
  createPermission(data: CreatePermissionInput!): PermissionOutput!
  createProfessional(data: CreateProfessionalInput!): ProfessionalOutput!
  deletePatient(id: String!): Boolean!
  updatePatient(data: UpdatePatientInput!, id: String!): PatientOutput!
}

type PatientOutput {
  address: AddressOutput
  birth_date: DateTime
  clinic_id: String!
  cpf: String!
  created_at: DateTime!
  dental_plan_name: String
  dental_plan_number: String
  email: String
  id: String!
  name: String!
  phone: String!
  public_id: Float!
  responsible_name: String
  responsible_phone: String
  updated_at: DateTime!
}

type PermissionOutput {
  id: String!
  level: String!
  professionalsIds: [String!]!
}

type ProfessionalOutput {
  clinicId: String!
  cpf: String!
  cro: String!
  email: String!
  fullName: String!
  id: String!
  permissionId: String!
  primaryPhone: String!
}

type Query {
  consultancies: [ConsultancyOutput!]!
  consultancy(id: String!): ConsultancyOutput!
  patient(id: String!): PatientOutput!
  patients(filters: FilterPatientInput, limit: Float, page: Float): [PatientOutput!]!
  permissions: [PermissionOutput!]!
  professionals: [ProfessionalOutput!]!
}

input UpdatePatientInput {
  address: AddressInput
  birth_date: DateTime
  clinic_id: String
  cpf: String
  dental_plan_name: String
  dental_plan_number: String
  email: String
  name: String
  phone: String
  responsible_name: String
  responsible_phone: String
}